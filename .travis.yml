language: cpp

matrix:
  include:
    - os: linux
      name: linux-gcc7-coverage
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - cmake
            - lcov
      env:
        - COMPILER="CC=gcc-7 && CXX=g++-7"
        - BUILD_TYPE=Coverage
      install:
        - eval $COMPILER
        - sudo apt-get remove python-enum34
        - sudo pip install --upgrade pip
        - sudo pip install conan
        - conan user
      after_success:
        - lcov --directory . --capture --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' '*/tests/*' '*/.conan/*' --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info;

    - os: osx
      name: osx-appleclang-debug
      osx_image: xcode10.2
      env:
        - BUILD_TYPE=Debug
      install:
        - brew install conan
        - export -n CC && export -n CXX
        - conan user

    - os: linux
      name: linux-clang7-release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-7-dev
            - cmake
      env:
        - COMPILER="CC=clang && CXX=clang++"
        - BUILD_TYPE=Release
      install:
        - eval $COMPILER
        - sudo apt-get remove python-enum34
        - sudo pip install --upgrade pip
        - sudo pip install conan
        - conan user

    - os: windows
      name: win-msvc-release

      install:
        - choco install conan
        - export PATH=$PATH:"/C/Program Files/Conan/conan"
      script:
        - mkdir out && cd out
        - conan install .. -o build_tests=True
        - cmake -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON ..
        - cmake --build . --config Release
        - cd tests && ctest --output-on-failure

    - os: linux
      name: linux-llvm7-analyze
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
          packages:
            - libstdc++-7-dev
            - clang-7
            - clang-tools-7
            - cmake
      env:
        - COMPILER="CC=clang-7 && CXX=clang++-7"
        - BUILD_TYPE=Release
      install:
        - eval $COMPILER
        - sudo apt-get remove python-enum34
        - sudo pip install --upgrade pip
        - sudo pip install conan
        - conan user
      script:
        - mkdir out && cd out
        - conan install .. -o build_tests=True
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
        - cd ..
        - clang-check-7 -analyze -p out/compile_commands.json tests/*.cpp lib/src/*.cpp lib/src_asio/*.cpp

  allow_failures:
    - os: windows

script:
  - mkdir out && cd out
  - conan install .. -o build_tests=True
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - cmake --build . -- -j $(nproc)
  - cd tests && ctest --output-on-failure
